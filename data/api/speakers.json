[
  {
    "id": "pooja_bhaumik",
    "name": "Pooja Bhaumik",
    "title": "GDE",
    "company": "",
    "social": {
      "twitter": "https://twitter.com/pblead26",
      "github": "https://github.com/PoojaB26",
      "linkedin": ""
    },
    "talk": {
      "title": "Diagnostic Tests for Flutter Apps: Debugging Techniques",
      "description": "Maybe the most important thing about development is not writing code, it is probably, efficiently and quickly finding and fixing the code that is causing the expected behaviour of your application. Flutter provides a number of tools and features to help debug applications, and the complete understanding of these tools is crucial for developers working in projects, specially production level apps. In this talk, Kamal Shree and I will jointly talk about the various methods of debugging, such as the DevTools built specially for Flutter and Dart that helps a developer debug memory issues, check diagnostics information, diagnose UI Jank performance issues, etc. Other than that, we will also talk about the debugging tools provided by Android Studio and VS Code themselves and other miscellaneous tools or features to debug animations, inspect widgets, etc. By the end of the talk, the attendees will know how to choose the right tool for the diagnostic tests for their Flutter applications, and hopefully gain speed at fixing issues in their code.",
      "lightening": false
    },
    "bio": "Pooja Bhaumik is a technical mentor at Startup Clinic initiative by Google For Startups, a Google Developer Expert for Flutter, former Senior Engineer at Bounce & CreatorStack and contributing author to Increment by Stripe. When she is not writing code, she either enjoys mentoring folks to help them grow in their development careers or contributes to the tech community through blog posts, public speaking, Youtube videos, and open source contributions. She is also passionate about diversity & inclusion and has co-founded WomenDroid to support personal & professional growth objectives for women developers."
  },
  {
    "id": "felix_angelov",
    "name": "Felix Angelov",
    "title": "Software engineer",
    "company": "very good ventures",
    "social": {
      "twitter": "https://twitter.com/felangelov",
      "github": "https://github.com/felangel",
      "linkedin": ""
    },
    "talk": {
      "title": "Managing State with Bloc v8",
      "description": "A deep dive into what has changed in version 8.0.0 of the bloc state management library. We’ll take a look at what sparked these changes, how to migrate to v8.0.0, and explore advanced use cases with an emphasis on concurrency, testing, and tooling. Attendees will hopefully leave the talk with a clear understanding of all major changes introduced in bloc v8.0.0 as well as an intro to the bloc_concurrency package. We’ll go over the built-in event transformers, talk about when to use them, and see how to implement a custom event transformer.",
      "lightening": false
    },
    "bio": "Felix Angelov is a Principal Engineer at Very Good Ventures. He previously worked at BMW where he pioneered the transition to Flutter. In addition to working with clients, he is also a dedicated open source creator and maintainer. Felix created the bloc library, which is one of the most popular state management libraries and has been named a Flutter Favorite by Google."
  },
  {
    "id": "danielle_cox",
    "name": "Danielle Cox",
    "title": "Software Engineer",
    "company": "flutterista",
    "social": {
      "twitter": "https://twitter.com/imafiguresk8r",
      "github": "",
      "linkedin": ""
    },
    "talk": {
      "title": "Finished you app?  Is it accessible? ",
      "description": "We are often in a hurry to complete our apps and get them submitted.  We are in such a hurry, that we forget, or worse yet, don't consider making them accessible.  That is a shame because it leaves many potential users out of your customer base, which is bad for all of us.  I am here to show you how taking a few steps will open your app up to more users which means more installs.  We will cover, with live coding, how to find where your application fails to accommodate users with special needs and the easy ways you can address these issues.",
      "lightening": false
    },
    "bio": "Danielle is the coorganizer of the Flutteristas and host of the recently successful Flutter Apprentice Book Club as well as a professional Flutter developer.  Since proudly graduating from the University of Oklahoma, she has worked for many large companies as well as multiple startups programming in C, SQL and most recently PHP."
  },
  {
    "id": "simon_lightfoot",
    "name": "Simon Lightfoot",
    "title": "FlutterWhisperer",
    "company": "FlutterLondon",
    "social": {
      "twitter": "https://twitter.com/devangelslondon",
      "github": "",
      "linkedin": ""
    },
    "talk": {
      "title": "State Restoration",
      "description": "Simon explains the new State Restoration API. Why its required.. How it works and more importantly how you can use it to allow your application to have its state long-lived after the application is closed or killed by the Operating System.",
      "lightening": false
    },
    "bio": "Simon loves Flutter and believes its the future of Mobile development. Co-founder Flutter Study Group on Slack, HumpdayQandA and Flutter Community Lead. He's been writing code for 18+ years, of which the last 10 years has been professional Android development. He discovered Flutter in Oct 2017 and since then has not looked back."
  },
  {
    "id": "kamal_shree",
    "name": "kamal shree S",
    "title": "",
    "company": "",
    "social": {
      "twitter": "https://twitter.com/whatsupcoders",
      "github": "https://github.com/whatsupcoders",
      "linkedin": ""
    },
    "talk": {
      "title": "Making best use of Dart DevTools",
      "description": "In this session you will get an overview of what's new in Dart DevTools for debugging and performance tools for Dart and Flutter, including demos and take a closer look at everything new - along with tips and tricks for getting the most out of them! Ranging from inspecting your layout to analyzing your app performance view and inbuilt debugger. Also, this session will take you through a variety of steps that can help increase your productivity.",
      "lightening": true
    },
    "bio": "Google Developer Expert in Flutter and Dart with 11 years of experience in Web Technologies, Android and Flutter. I have worked for multinational firms in India, the Netherlands and US.I am an active Youtuber(whatsupcoders) and international speaker with my talks featured in Chicago Meetup,        Devfest Michigan, Droidcon Toronto, KolkataKreate,360AnDev,byteconf-flutter, FemTech, NDC Sydney and various Women TechMakers events globally."
  },
  {
    "id": "lukas_klingsbo",
    "name": "Lukas Klingsbo",
    "title": "Flutter Developer",
    "company": "MindLevel AB",
    "social": {
      "twitter": "https://twitter.com/spyd0n",
      "github": "https://github.com/spydon/",
      "linkedin": "https://www.linkedin.com/in/spydon/"
    },
    "talk": {
      "title": "Creating games with physics in Flutter",
      "description": "",
      "lightening": false
    },
    "bio": "Programmer, backpacker, keyboard builder, climber and slightly more crazy than you are allowed to be."
  },

  {
    "id": "dominik_roszkowski",
    "name": "Dominik Roszkowski",
    "title": "Principle Engineer",
    "company": "DR Labs",
    "social": {
      "twitter": "https://twitter.com/OrestesGaolin",
      "github": "http://github.com/orestesgaolin",
      "linkedin": ""
    },
    "talk": {
      "title": "Understanding Navigator 2.0 in Flutter",
      "description": "Learn how to use new declarative Navigator 2.0 ",
      "lightening": false
    },
    "bio": "Dominik is experienced Flutter Developer eager to create beautiful apps for mobile and desktop. He's Google Developer Expert in Flutter, co-founder of Flutter Europe conference and Flutter Warsaw meetup. He is active speaker on local meetups and conferences and writes Flutter-related articles on his blog roszkowski.dev. He's been working as a deputy manager of PW-Sat2 student satellite project."
  },
  {
    "id": "muhammed_salih_guler",
    "name": "Muhammed Salih Guler",
    "title": "Senior Mobile Engineer",
    "company": "Superlist",
    "social": {
      "twitter": "https://twitter.com/salihgueler",
      "github": "https://github.com/salihgueler",
      "linkedin": ""
    },
    "talk": {
      "title": "How to add Flutter to your existing app",
      "description": "From the day that it's announced, Flutter is attracting so many developers from different backgrounds. It gives everyone a chance to build an application from a single codebase and deploy it to Android, iOS, Desktop, and Web. But not everyone is in the position to abandon an existing codebase and start from scratch. Luckily Flutter got you covered if you want some of the great Flutter features on your ongoing application. <br/>In this talk, we will have a look at how you can add Flutter to your ongoing project by showing a real-life example app with thousands of users and, we will talk about how you can rewrite your existing applications step by step with Flutter.",
      "lightening": false
    },
    "bio": "Salih is a Berlin based Android Engineer who is a Google Developer Expert for Flutter and Dart. He likes sharing his knowledge with the people by mentoring aspiring developers, blogging and talking at conferences."
  },
  {
    "id": "matej_knopp",
    "name": "Matej Knopp",
    "title": "Senior Engineer",
    "company": "Superlist",
    "social": {
      "twitter": "https://mobile.twitter.com/matejknopp",
      "github": "",
      "linkedin": ""
    },
    "talk": {
      "title": "NativeShell",
      "description": "TBA",
      "lightening": false
    },
    "bio": "I’ve been fascinated with desktop applications ever since I first saw Turbo Vision. I went through many different toolkits, but eventually came to a conclusion that there’s nothing quite like Flutter. I contribute to Flutter Engine, work on NativeShell and think that Rust and Flutter is a beautiful combination."
  },
  {
    "id": "chris_swan",
    "name": "Chris Swan",
    "title": "Senior Engineer",
    "company": "The @ Company",
    "social": {
      "twitter": "https://twitter.com/cpswan",
      "github": "",
      "linkedin": "https://www.linkedin.com/in/chrisswan/"
    },
    "talk": {
      "title": "Full Stack Dart",
      "description": "Flutter provides an excellent way to build Android, iOS, web and desktop apps, but what about the back end services? Full stack Dart is all about using that investment in Dart programming to build the services used by applications, whether it's in the cloud or on the Internet of Things.",
      "lightening": false
    },
    "bio": "I’ve been fascinated with desktop applications ever since I first saw Turbo Vision. I went through many different toolkits, but eventually came to a conclusion that there’s nothing quite like Flutter. I contribute to Flutter Engine, work on NativeShell and think that Rust and Flutter is a beautiful combination."
  },
  {
    "id": "goncalo_palma",
    "name": "Gonçalo Palma",
    "title": "GDE",
    "company": "",
    "social": {
      "twitter": "https://twitter.com/GonPalma",
      "github": "https://github.com/vanethos",
      "linkedin": ""
    },
    "talk": {
      "title": "Supercharging your Flutter Web Apps with Web Assembly",
      "description": "With Flutter Web we allow our users to access our apps from anywhere - their phones, computers, TVs, and even fridges! However, there are a couple of restrictions in Flutter for Web, such as the inability to spawn new threads via isolates, that can our lives as devs more difficult. Fortunately, Web Assembly provides what we need - it enables us to have native speeds in a web browser, meaning we can now do expensive operations such as cryptography, image compression, and others client-side. In this talk, we’ll explore how we can use Rust and Web Assembly to supercharge our Flutter Web apps!",
      "lightening": false
    },
    "bio": "I’m a GDE for Flutter and Dart and the Lead Developer of Pvotal, a Tech company where we explore how we can use Flutter Web to solve the Equine industry’s main problems with bleeding-edge technology. Flutter has not only proved to be a fun and challenging tool, being the main technology that I used in two different startups, but it also brought me to new passions, such as Open Source - with package creation, and contributing to open-source apps, communities - with Flutter Portugal, and education - with sharing what I’ve learned so far via articles and talks. My mantra is to explore and find via rubber-ducking: many times we don’t have the answers in articles (although WE may be the ones writing them), so we must be comfortable with diving into the unknown, testing, failing, and rambling about it with your team or friends."
  },
  {
    "id": "sakina_abbas",
    "name": "Sakina Abbas",
    "title": "GDE",
    "company": "",
    "social": {
      "twitter": "https://twitter.com/sakin8tor",
      "github": "https://github.com/sakina-abbas",
      "linkedin": ""
    },
    "talk": {
      "title": "Working with Background Services in Flutter",
      "description": "Some applications require that the code is still being executed even when the app is no longer running in the foreground. A good example is an Uber Captain's app that is always listening for nearby ride requests. This talk will demonstrate how the use of Background Services can achieve seamless code execution of a Flutter app in the background. You will learn about a Flutter app's lifecycle, the concept of Services and Isolates and certain plugins that can be used for background code execution in Flutter, and at the end, you will also see a working app executing its code in the background - without any user interaction!",
      "lightening": false
    },
    "bio": "Co-founder and CEO of Reactree and the first female Google Developer Expert for Flutter and Dart in Pakistan, Sakina Abbas is all about solving problems through technology. She started off as a native Android developer and is now leading Flutter development and DevOps at ReacTree. To date, she has provided consultancies to numerous international and local clients and has built a number of custom solutions. She's an avid gamer, and much of her personal work is inspired by games."
  },
  {
    "id": "vilson_blanco_dauinheimer",
    "name": "Vilson Blanco Dauinheimer",
    "title": "GDE",
    "company": "",
    "social": {
      "twitter": "https://twitter.com/BwolfDev",
      "github": "https://github.com/bwolfs2",
      "linkedin": ""
    },
    "talk": {
      "title": "Micro-Apps || Micro Front-Ends",
      "description": "When we think about larger applications and larger teams, we can't escape separating our application into modules or packages. If you've ever worked in larger companies, you may have noticed that almost everything is separated into smaller Squads with well-defined roles. The talk intends to demonstrate how we are developing in apps in an uncoupled, organized and very simple way to be reused in different scenarios of the company. Micro-Apps or Micro-FrontEnds in flutter are almost apps that have full functionality or with few external dependencies and reusable, the most common example is the Authentication Module that has only the functions of Login, Logout, Register and password Recover, this Module in question is used by all Projects of the company making that when starting a new project we no longer need to worry about Authentication. Working in this way we were able to increase team productivity by reusing code and applying single responsibility where each module has a specific function, this module can be maintained by a specific and specialized team in a given context such as a Payment Module or a Module of HR.This talk aims to show a more advanced content of Flutter presenting an architecture based on packages and which is widely used in Brazilian companies, presenting a separation in Modules and also the use of Clean Architecture for a better organization of the project.",
      "lightening": false
    },
    "bio": "Technology enthusiast, computer lover and for the possibility of turning ideas into reality. Being able to create, take something out of my mind and make it real is fascinating to me, especially in the mobile world using Flutter! Co-Founder and Organizer of Flutterando the Biggest Flutter Community of Brazil Google For Startups Mentor Flutter Specialist at F-Team"
  },
  {
    "id": "mais_alheraki",
    "name": "Mais Alheraki",
    "title": "GDE",
    "company": "",
    "social": {
      "twitter": "https://twitter.com/pr_Mais",
      "github": "https://github.com/pr-mais",
      "linkedin": ""
    },
    "talk": {
      "title": "FlutterFire support for Desktop and Dart",
      "description": "Ever wished FlutterFire supports Linux and Windows? Wish no more, it's a fact in-progress. With support from Canonical, Invertase released Firebase Auth support for Flutter on Linux, Windows, and oh.. also Dart. Moreover, support for more of the FlutterFire family is yet to come. In this talk I will walk through the challenges of implementing Firebase Auth functionalities from scratch in pure Dart, without depending on Flutter - making it a universal package that can run on all platforms. Under the hood, Federated Plugins has made this possible, how does federating your plugins work for empowering the Flutter ecosystem to grow faster on all 6 platforms?",
      "lightening": false
    },
    "bio": "Software engineer and Flutter GDE."
  },
  {
    "id": "aleksandr_denisov",
    "name": "Aleksandr Denisov",
    "title": "GDE",
    "company": "",
    "social": {
      "twitter": "https://twitter.com/shuregdenisov",
      "github": "https://github.com/DenisovAV",
      "linkedin": ""
    },
    "talk": {
      "title": "Flutter for TV platforms",
      "description": "Flutter for Mobile is released, Flutter for Web is in beta, Flutter for MacOs, Linux and Windows is in Alpha and it's really cool that Flutter officially supports six platforms. But what if I want to run my Flutter app on the TV? Unfortunately, nobody has heard of the official Flutter for TV yet. Actually, a Flutter app can be launched on TV (not AndroidTV only, but AppleTV, Tizen and others as well). In my talk, I'm going to tell you how to do this, and what difficulties and issues you will face and how to resolve them.",
      "lightening": false
    },
    "bio": "Aleksander is experienced a lot in enterprise development, in IT for more than 15 years. He worked in many different domains with many different technologies, but currently, his main interest is multi-platform development using Flutter. Aleksandr, Chief Software Engineer, Co-Head of Flutter Competency at EPAM Systems, Flutter and Dart GDE (Google Developer Expert), organizer of GDG Moscow community, host of podcasts Mobile People Talks and Flutter Dev Podcast."
  },
  {
    "id": "thomas_burkhart",
    "name": "Thomas Burkhart",
    "title": "GDE",
    "company": "",
    "social": {
      "twitter": "https://twitter.com/thomasburkhartb",
      "github": "https://github.com/escamoteur",
      "linkedin": ""
    },
    "talk": {
      "title": "3D Graphics with Flutter and OpenGL",
      "description": "So far Flutter doesn't offer a performant solution to render 3D Graphics. This is to be changed with the FlutterWebGL project that allows to use WebGL inside a FlutterWidget. This talk will explain the principle behind it as well as some 3D demonstrations ",
      "lightening": true
    },
    "bio": "Born 1971 Thomas Burkhart could be seen almost as a legacy system. Being almost 30 years in this industry led him to a lot of different technologies, like C++ with mfc, C#, microcontrollers in C and currently mobile App development with Flutter and Dart.  What only view people know that he was also a professional magician and bakes his own bread."
  },
  {
    "id": "waleed_arshad",
    "name": "Waleed Arshad",
    "title": "GDE",
    "company": "",
    "social": {
      "twitter": "https://twitter.com/wal_33d",
      "github": "https://github.com/wal33d006",
      "linkedin": ""
    },
    "talk": {
      "title": "Spice up your Flutter apps with Shortcuts & Actions",
      "description": "Since a lot of developers are moving their Flutter applications to support the Web and Desktop, I propose something that will help them increase the user experience of their applications. This talk majorly focuses on adding shortcuts and actions to Flutter applications using Intents, without having to add any third party plugins/packages in the code. For example, a Flutter desktop app, or a Flutter web app has a writing/editing feature along with the ability to save things. In this case ideally the common gesture to achieve this is Ctrl+S for “save”, Ctrl+A for “select all”,  Ctrl+C for “copy”, and so on. With Intents and Actions widget in Flutter, it is all possible with simplicity and minimum amount of code. This session will have most of its part as live coding stuff.",
      "lightening": true
    },
    "bio": "Waleed Arshad is a core mobile technologist, an author, and a passionate cross-platform developer. He has recently authored a book named “Manage State in Flutter Pragmatically”. He is also the first person from Pakistan to become a Google Developer Expert in Flutter. After graduating from FAST Karachi, he has been working in the industry for more than five years and is currently working in the Developer Experience team for Flutter at Tendermint Inc.. He is also leading Pakistan’s Flutter community."
  },
  {
    "id": "aloos_deniel",
    "name": "Aloïs Deniel",
    "title": "GDE",
    "company": "Freelance",
    "social": {
      "twitter": "https://twitter.com/aloisdeniel",
      "github": "https://github.com/aloisdeniel/",
      "linkedin": ""
    },
    "talk": {
      "title": "Custom design systems: from design to widgets",
      "description": "During this talk, we'll see how to help UX/UI designers and Flutter developers to collaborate, and how to transition efficiently from visual prototypes to Flutter widgets. First, we'll see how designers can architecture their design system in a way that makes it easier for developers to implement. Then we'll see which base widgets should be used to build your own widget library and create a visual experience that really matches the original prototypes. The UX/UI design software used during this presentation will be Figma, but the general concepts behind it will be adaptable to other software as well.",
      "lightening": false
    },
    "bio": "I'm a french Flutter freelance developer from France. I love contributing to the Flutter community by participating to open source projects and creating content. I'm also a Google Developer Expert."
  },
  {
    "id": "morgan_hunt",
    "name": "Morgan Hunt",
    "title": "Flutter developer",
    "company": "",
    "social": {
      "twitter": "https://twitter.com/mrgnhnt96_dev",
      "github": "https://github.com/mrgnhnt96",
      "linkedin": ""
    },
    "talk": {
      "title": "Create your own Code-Generating Package",
      "description": "In this session, I will walk the audience through what code-generation is, why we use it within our projects, and how every developer can create their own code-gen package. What is Code Generation I'll discuss what code generation is and the issues and mundane tasks that it tries to solve. I will talk about the reasons how generating code can reduce errors and code that requires maintenance. Why use Code Generation One of the more prominent solutions that code generation provides is maintenance reduction. I'll discuss some popular packages and the pain points that they try to solve through code generation. I'll demonstrate a common task that happens in almost every project and how it can be solve using a code-gen package. Then I will compare the old maintenance-required code to the newly, almost maintenance free, generated code. Create your own code-gen package Finally, I'll break down the minimum code needed to set up your own code generating package, solving a problem in a particular project. Starting by demonstrating how to create annotations & it's generator, the available options for part files, settings via the build.yaml file, and testing.",
      "lightening": false
    },
    "bio": "Morgan is a die-hard Flutter developer 💙. He has been developing in Flutter non-stop since Flutter 1.12 was released! Morgan has been developing many dart & flutter packages, and contributing to as many open-source projects as he can. He currently works full-time at Clean Simple Eats with a bit of freelance on the side because he can't control how much he loves to code."
  },
  {
    "id": "minas_giannekas",
    "name": "Minas Giannekas",
    "title": "Flutter developer",
    "company": "Self-employed",
    "social": {
      "twitter": "https://twitter.com/whiplashoo",
      "github": "https://github.com/whiplashoo",
      "linkedin": ""
    },
    "talk": {
      "title": "Using Flutter to build a native-looking desktop app for macOS and Windows",
      "description": "I recently built and shipped a simple app with Flutter desktop, called Shortcut Keeper. It is a utility app that lets you save and keep in one place your favorite keyboard shortcuts. It is available for macOS and Windows through their respective stores, and features an adaptive UI design. In my talk, I will be presenting the steps I took and tools I used to build the app with a UI that matches each platform's design standards (components like buttons or icons, animations, title bars, etc.). I will try to showcase how easy it is to use Flutter for desktop and create a native-looking app for macOS and Windows. The app has attracted some attention from members of the Flutter community (most importantly, Chris Sells from Google's Flutter team wanted to talk about it, as well as other Flutter developers). I have also written a couple of blog posts detailing some of the stuff included in the talk, in case you need to have a look. Thanks for the consideration!",
      "lightening": true
    },
    "bio": "I am a self-employed app developer. My main background is web development, but I have been using Flutter for the past year or so and have published apps for all platforms, mobile and desktop. I also contribute to open-source and am an author of a couple of Flutter packages. "
  },
  {
    "id": "pascal_welsch",
    "name": "Pascal Welsch",
    "title": "GDE",
    "company": "",
    "social": {
      "twitter": "https://twitter.com/passsy",
      "github": "https://github.com/passsy",
      "linkedin": ""
    },
    "talk": {
      "title": "The unpaid backbone of our apps: Package maintainers",
      "description": "Today, most Flutter apps are using 50 or more packages. But who are the persons behind all those open source packages? What keeps them motivated? What are their challenges? And why do they invest their valuable free time to answer our questions and fix bugs? In this talk you'll learn what it's like to be a package maintainer. During multiple interviews I gathered more insights, combined individual stories into a big picture and share the findings with ya'll. Stay tuned for some 'behind the scenes' stories!",
      "lightening": false
    },
    "bio": "Pascal is one of the first GDEs for Flutter and Dart and maintainer of multiple open-source libraries. He's running phntm, a Flutter agency in Germany and builds Flutters best user feedback tool wiredash.io"
  },
  {
    "id": "abhishek_yatinkumar_doshi",
    "name": "Abhishek Yatinkumar Doshi",
    "title": "GDE",
    "company": "",
    "social": {
      "twitter": "https://twitter.com/AbhishekDoshi26",
      "github": "https://github.com/AbhishekDoshi26",
      "linkedin": ""
    },
    "talk": {
      "title": "Nature or Flutter? Who has the best trees?",
      "description": "Nature has wide variety of trees. However Flutter also has 3 types of trees. What are the use of those trees? How Flutter creates, renders and destroys a widget? What is the role of state and State Management? Let's check it out in the session! ",
      "lightening": false
    },
    "bio": "Hey Everyone! **I am a Google Developer Expert for Dart and Flutter! I am also one of the Google Mentors. 💙** I currently work as a Software Engineer (Flutter Developer) at Bacancy Technology. I am also the Organizer of Flutter Valsad and Co-Organizer of Flutter India. During the daytime, I manage different projects, take interviews for the Flutter Developer position, and help the team with issues. After work, I write articles for the community and help people leverage their careers in Flutter. Reachout to me at: https://www.linkedin.com/in/abhishekdoshi26 https://twitter.com/AbhishekDoshi26 https://www.instagram.com/abhishekdoshi26 https://github.com/AbhishekDoshi26 Read my articles at: https://abhishekdoshi26.medium.com/"
  },
  {
    "id": "cagatay_ulusoy",
    "name": "Cagatay Ulusoy",
    "title": "Flutter Developer",
    "company": "",
    "social": {
      "twitter": "https://twitter.com/ulusoyapps",
      "github": "https://github.com/ulusoyca",
      "linkedin": ""
    },
    "talk": {
      "title": "From Motion Design Specs To Flutter Code",
      "description": "Motion is one of the pillars helping users guide through their journey. It is the most distinctive way to show what is happening on the screen. Motion eases the cognitive load, ‘lets’ the product interact with the user and shows the hierarchy of the elements. It also affects customer satisfaction by enhancing the experience with micro-interactions and aesthetic brand elements. In a production stage, animated transition previews are not enough to communicate to engineers. To achieve the best result and reduce friction between designers and engineers, motion specifications are needed. In this talk, we will talk about how to implement UI with Flutter according to the motion specs received from motion designers.",
      "lightening": false
    },
    "bio": "Cagatay is a Software Engineer specialized in Android and Flutter application development. He is currently working as a software engineer at Wolt, in the retail team. He is passionate about blogging and vlogging his ultra trail races, sharing knowledge in the Flutter community with sample apps and articles."
  },
  {
    "id": "alicja_ogonowska",
    "name": "Alicja Ogonowska",
    "title": "Flutter Developer",
    "company": "",
    "social": {
      "twitter": "https://twitter.com/AlicjaOgonowska",
      "github": "",
      "linkedin": ""
    },
    "talk": {
      "title": "Let's test the full widget tree!",
      "description": "In my talk I would like to present the idea of ‘’full tree’’ widget tests. This is the name we are using for them internally in our team at flaconi. My colleague Natalie Masse Hooper recently wrote a blog post about it - http://cogitas.net/unleash-full-power-flutter-widget-tests/. Instead of writing widget tests that exercise just one widget in separation, we set up the whole path user would have to follow to encounter this widget. Example - to test a products list in a mobile shop, you have to first start the app, do some setup typical for the domain - like choosing a language, country, decide whether it’s a logged in or anonymous user, then navigate to the products list. This is similar to writing integration tests, but those widget tests run much faster (cause they don’t run on a real device) and interact with mocks instead of making real API calls. It’s easy to test not only happy paths, but also various error scenarios, as well as timeout etc. Another benefit of those tests is quickly increasing test coverage, as many layers of the app are tested at the same time. Later this gives us more confidence to make bigger refactors - we have tests that will check if all parts of the app still behave as expected. In the talk I would like to cover: -when to use full widget tree tests and when ‘normal’ widget tests are just fine -what can you test with it -advantages over using typical widget tests or integration tests -setup that is needed to get you going -common problems that can be encountered while implementing such tests, based on my team’s experience",
      "lightening": false
    },
    "bio": "I am a mobile app developer with 6 years of experience. I started as an Android developer and then moved to Flutter over two years ago, never regretting the change! If I don't code, I probably cook or eat."
  },
  {
    "id": "jeroen_meijer",
    "name": "Jeroen Meijer",
    "title": "GDE",
    "company": "",
    "social": {
      "twitter": "https://twitter.com/jfkdev",
      "github": "https://github.com/jeroen-meijer",
      "linkedin": ""
    },
    "talk": {
      "title": "TBA",
      "description": "TBA",
      "lightening": true
    },
    "bio": "Jay is a Dutch full-stack app developer, administrator and moderator for the Flutter Community organization, passionate about Flutter and TypeScript and helping people out wherever possible."
  },
  {
    "id": "scott_stoll",
    "name": "Scott Stoll",
    "title": "Community Lead",
    "company": "",
    "social": {
      "twitter": "https://twitter.com/scottstoll2017",
      "github": "",
      "linkedin": ""
    },
    "talk": {
      "title": "TBA",
      "description": "TBA",
      "lightening": true
    },
    "bio": "Flutter Community Leader"
  },
  {
    "id": "alessio_salvadorini",
    "name": "Alessio Salvadorini",
    "title": "Flutter Developer",
    "company": "",
    "social": {
      "twitter": "https://twitter.com/ASalvadorini",
      "github": "https://github.com/alesalv",
      "linkedin": ""
    },
    "talk": {
      "title": "Flutter Architecture Components",
      "description": "A high level overview of a simple Flutter architecture, inspired by Android Architecture Component. This architecture is based on MVC (as hinted by Flutter 2.5 new template app) and on Simple State Management aka Pragmatic SM, the only officially documented one on flutter.dev, and presented at Google I/O 2019. The need for this talk comes from the fact that most devs use BLoC, presented at Google I/O 2018, which has quite some overhead, while the SSM based on Provider+ChangeNotifier is much simpler. Therefore I introduce in this talk a variant of that state management based on Riverpod instead of Provider, and then contextualise it in the MVC architecture, where the views are the widgets, the controllers are the ChangeNotifiers, and the services are the stores where to get the data from. Last but not least, I show the network bound resource approach as defined by Android Architecture Component which allows to show on UI the local copy of the data while fetching remotely the most update one. I will present this same presentation at a local audience by end of November at the Helsinki meetup, where I was asked to make it codeless or non-technical, but I'd like to present it to a bigger audience and also I could introduce some code snapshots or make it more technical",
      "lightening": false
    },
    "bio": "I'm specializes in mobile development and design. I forge products based on simplicity, fluidity, and beauty. Like a superhero, Creative Technologist at IDT Messaging during the day, Explorer at Fluxit during the night. It all started long time ago on handhelds devices, but my passion flourished when I met Android, and exploded when I encountered Flutter. All things Fuchsia"
  },
  {
    "id": "gordon_hayes",
    "name": "Gordon Hayes",
    "title": "Flutter Developer Advocate",
    "company": "Stream",
    "social": {
      "twitter": "https://twitter.com/gordonphayes",
      "github": "https://github.com/funwithflutter",
      "linkedin": ""
    },
    "talk": {
      "title": "Tips, Tricks and Tools: Flutter Performance",
      "description": "Brief intro on Widgets, Element and RenderObjects - as this is important to understand to get a cleaner picture of why something could have a performance impact. From there it will be a hands on demo (probably recorded vids/walkthroughs) showing how to use Flutter DevTools and your IDE to find, track, understand and eventually fix common (and not so common) performance issues. The idea is to present these tips/tools as small isolated sections in the bigger talk. To create something that people can easily refer back to in the future. This talk can be very technical and the focus can be on more advance performance metrics. But I want it to strike a nice in-between. Starting with easy tips, and moving on to some more complex scenarios. So there will be something for every level hopefully.",
      "lightening": false
    },
    "bio": "Flutter Developer Advocate at Stream. Creator of the Fun with Flutter YouTube Channel."
  },
  {
    "id": "tom_gilder",
    "name": "Tom Gilder",
    "title": "Flutter Developer",
    "company": "",
    "social": {
      "twitter": "https://twitter.com/tomgilder",
      "github": "https://github.com/tomgilder",
      "linkedin": ""
    },
    "talk": {
      "title": "Navigator 2.0: huh? What’s wrong with .push()?",
      "description": "My talk is an overview and tour of the Flutter Router (aka Navigator 2.0) API. Primarily aimed at existing Flutter devs who have heard of the new Router API, but are confused as to why and when they'd need to use it. If the existing Navigator does everything you need to, why would you need to change? I've also been assisting a company with adding Navigator 2.0 support to a big new Flutter desktop app - hopefully I'll be able to talk about it come February! The talk aims to answer these questions: - What problems does the new API solve? - When would you need to migrate from the classic Navigator? - How do you migrate? Should you use a package? Areas covered: - General overview of the routing API, and why it's a bit confusing - Web URL support - Deep linking (such as from push notifications) - Platform differences between mobile, desktop and web - Comparing and implementing routing packages If there's time, I could also potentially cover advanced topics such as analytics. Although I'm the author of Routemaster and will talk about it, I won't just be plugging my package :-) I did an initial 15 minute version of the talk, but I would heavily rework it for Flutter Vikings: https://www.youtube.com/watch?v=r9QVF5lMp7I Thanks for reading my proposal!",
      "lightening": false
    },
    "bio": "Tom makes awesome apps with Flutter at Codemate in Helsinki. He's been working professionally with Flutter for the past 3 years, and is the author of the popular Routemaster navigation package."
  },
  {
    "id": "krzysztof_sroka",
    "name": "Krzysztof Krasiński-Sroka",
    "title": "GDE",
    "company": "",
    "social": {
      "twitter": "https://twitter.com/kpsroka",
      "github": "https://github.com/kpsroka",
      "linkedin": ""
    },
    "talk": {
      "title": "When Flutter Goes Red",
      "description": "Whoopsie-daisy! Your perfect Flutter Widget just rendered as a glaring red box. Was it another overflow by infinity pixels, or maybe a classic division by zero in your build method? In this talk, we'll go through techniques of investigating common errors in your Flutter code, from the well known and loved debugPrint() to diving deeper in the DevTools to investigate the SDK methods that just take too much time.",
      "lightening": false
    },
    "bio": "Krzysztof is an experienced developer with passion for creating beautiful and useful user interfaces. Throughout his career he worked on a variety of products, starting from testing tools, data-crunching pipelines, web technologies, and finally mobile apps. Apart from being a developer, he is also a founder and tech lead of Widgeters, a Flutter development consultancy, and a Google Developer Expert for Dart and Flutter."
  }
]
